# Generated by Django 4.2.2 on 2023-10-26 19:02

import uuid

import django.contrib.postgres.indexes
import django.contrib.postgres.search
import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Event",
            fields=[
                ("id", models.UUIDField(primary_key=True, serialize=False)),
                ("timestamp", models.DateTimeField()),
                (
                    "platform",
                    models.CharField(
                        choices=[("python", "Python")], max_length=32
                    ),
                ),
                ("message", models.TextField()),
                ("logger", models.TextField(blank=True, null=True)),
                (
                    "level",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("debug", "Debug"),
                            ("info", "Info"),
                            ("error", "Error"),
                            ("fatal", "Fatal"),
                            ("sample", "Sample"),
                            ("warning", "Warning"),
                        ],
                        max_length=8,
                        null=True,
                    ),
                ),
                (
                    "transaction",
                    models.CharField(blank=True, max_length=128, null=True),
                ),
                (
                    "environment",
                    models.CharField(blank=True, max_length=256, null=True),
                ),
                (
                    "server_name",
                    models.CharField(blank=True, max_length=256, null=True),
                ),
                ("log_message", models.TextField(blank=True, null=True)),
                ("handled", models.BooleanField(default=False)),
                (
                    "mechanism",
                    models.CharField(blank=True, max_length=32, null=True),
                ),
                ("exception_message", models.TextField(blank=True, null=True)),
                (
                    "runtime_name",
                    models.CharField(blank=True, max_length=64, null=True),
                ),
                (
                    "runtime_version",
                    models.CharField(blank=True, max_length=64, null=True),
                ),
                ("runtime_build", models.TextField(blank=True, null=True)),
                ("user", models.TextField(blank=True, null=True)),
                ("resolved", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("resolved_at", models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Project",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=120,
                        unique=True,
                        validators=[
                            django.core.validators.MinLengthValidator(
                                limit_value=1
                            )
                        ],
                    ),
                ),
                (
                    "public_key",
                    models.UUIDField(default=uuid.uuid4, unique=True),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="RawEvent",
            fields=[
                ("id", models.UUIDField(primary_key=True, serialize=False)),
                ("data", models.JSONField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="events.project",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Issue",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("signature", models.CharField(max_length=64)),
                ("resolved", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("resolved_at", models.DateTimeField(blank=True, null=True)),
                ("first_seen_at", models.DateTimeField()),
                ("last_seen_at", models.DateTimeField()),
                (
                    "primary_event",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="primary_issues",
                        to="events.event",
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="events.project",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="event",
            name="issue",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="events",
                to="events.issue",
            ),
        ),
        migrations.AddField(
            model_name="event",
            name="project",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="events.project",
            ),
        ),
        migrations.AddField(
            model_name="event",
            name="raw_event",
            field=models.OneToOneField(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="event",
                to="events.rawevent",
            ),
        ),
        migrations.AddIndex(
            model_name="rawevent",
            index=models.Index(
                fields=["project_id"], name="ix__raw_event__project_id"
            ),
        ),
        migrations.AddIndex(
            model_name="issue",
            index=models.Index(
                fields=["project_id"], name="ix__issue__project_id"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="issue",
            unique_together={("project_id", "signature")},
        ),
        migrations.AddIndex(
            model_name="event",
            index=models.Index(
                fields=["project_id"], name="ix__event__project_id"
            ),
        ),
        migrations.AddIndex(
            model_name="event",
            index=models.Index(
                fields=["timestamp"], name="ix__event__timestamp"
            ),
        ),
        migrations.AddIndex(
            model_name="event",
            index=django.contrib.postgres.indexes.GinIndex(
                django.contrib.postgres.search.SearchVector(
                    "message",
                    "log_message",
                    "exception_message",
                    config="english",
                ),
                name="events_search_vector_idx",
            ),
        ),
    ]
